dplyr::select(DATE, VALUE) %>%
rename(time = DATE, value = VALUE) %>%
ts_xts()
wwwi <- read_xlsx(temp, sheet = "WWWI",
wwwi <- read_xlsx(temp, sheet = "WWWI",
#wwwi <- read_xlsx(path = "./real_data/wwwi_wifo.xlsx", sheet = "WWWI",
skip = 2, col_names = c("DATE", "VALUE", "cng_yavg", "cng_q")) %>%
#col_types = c("date", "guess", "guess", "guess"),
#n_max = t) %>%
mutate(DATE = as.character(DATE)) %>%
dplyr::select(DATE, VALUE) %>%
rename(time = DATE, value = VALUE) %>%
ts_xts()
wwwi <- read_xlsx(temp, sheet = "WWWI",
#wwwi <- read_xlsx(path = "./real_data/wwwi_wifo.xlsx", sheet = "WWWI",
skip = 2, col_names = c("DATE", "VALUE", "cng_yavg", "cng_q") %>%
#col_types = c("date", "guess", "guess", "guess"),
n_max = t) %>%
### WIFO Weekly Tracker
temp <- tempfile()
download.file("https://www.wifo.ac.at/wwadocs/konjunktur/W%C3%B6chentlicherWIFOWirtschaftsindex/WIFO-Konjunkturberichterstattung_W%C3%B6chentlicherWIFOWirtschaftsindex.xlsx",
destfile = temp)
t0 <- as.numeric(as.Date("2007-01-01"))
t1 <- as.numeric(as.Date(Sys.Date()))
t <- round((t1 - t0) / 7) - 3 # weeks passed since index started
wwwi <- read_xlsx(temp, sheet = "WWWI",
#wwwi <- read_xlsx(path = "./real_data/wwwi_wifo.xlsx", sheet = "WWWI",
skip = 2, col_names = c("DATE", "VALUE", "cng_yavg", "cng_q"),
#col_types = c("date", "guess", "guess", "guess"),
n_max = t) %>%
mutate(DATE = as.character(DATE)) %>%
select(DATE, VALUE) %>%
rename(time = DATE, value = VALUE) %>%
ts_xts()
wwwi <- read_xlsx(temp, sheet = "WWWI",
#wwwi <- read_xlsx(path = "./real_data/wwwi_wifo.xlsx", sheet = "WWWI",
skip = 2, col_names = c("DATE", "VALUE", "cng_yavg", "cng_q"),
#col_types = c("date", "guess", "guess", "guess"),
n_max = t) %>%
mutate(DATE = as.character(DATE)) %>%
dplyr::selectselect(DATE, VALUE) %>%
rename(time = DATE, value = VALUE) %>%
ts_xts()
wwwi <- read_xlsx(temp, sheet = "WWWI",
#wwwi <- read_xlsx(path = "./real_data/wwwi_wifo.xlsx", sheet = "WWWI",
skip = 2, col_names = c("DATE", "VALUE", "cng_yavg", "cng_q"),
#col_types = c("date", "guess", "guess", "guess"),
n_max = t) %>%
mutate(DATE = as.character(DATE)) %>%
dplyr::select(DATE, VALUE) %>%
rename(time = DATE, value = VALUE) %>%
ts_xts()
View(wwwi)
# abgerufen final am 11.02.2022
#Source: https://data.oecd.org/gdp/quarterly-gdp.htm#indicator-chart
gdp <- read.csv("https://raw.githubusercontent.com/anneval/MA_data/main/RData/GDP_oecd.csv")[9:71,6:7]
colnames(gdp)[colnames(gdp) %in% c("TIME", "Value")] <- c("QDate", "value")
gdp <- cbind(gdp,Date_q)
t_0 <- as.Date("2006-01-01") #Setting start date for the series
t_1 <- as.Date("2021-07-01") #Setting end date for the series
t_2 <- as.Date("2021-12-31")
Date_q <- seq.Date(t_0,t_1,by="quarter")
Date_m <- seq.Date(t_0,t_2,by="month")
bigT <- length(Date_q)
M <- 6
Data   <- matrix(NA,bigT,M)
colnames(Data)  <- c("gdp", "cci", "google","gdp_ts", "cci_ts", "google_ts")
Data <- as.data.frame(Data)
rownames(Data)  <- as.Date(Date_q)
# abgerufen final am 11.02.2022
#Source: https://data.oecd.org/gdp/quarterly-gdp.htm#indicator-chart
gdp <- read.csv("https://raw.githubusercontent.com/anneval/MA_data/main/RData/GDP_oecd.csv")[9:71,6:7]
colnames(gdp)[colnames(gdp) %in% c("TIME", "Value")] <- c("QDate", "value")
gdp <- cbind(gdp,Date_q)
#ts:
gdp_ts <- ts(gdp$value, start=c(2006,1), end = c(2021,3), frequency = 4)
Data[(Date_q%in%gdp$Date_q),1] <- gdp$value
Data$gdp_ts <- ts(Data$gdp, start=c(2006,1), end = c(2021,3), frequency = 4)
# abgerufen: daily update
Google_AT_daily <- read.csv("https://raw.githubusercontent.com/anneval/MA_data/main/raw/at/trendecon_sa.csv")
# transform to quarterly and then do ts:
Google_AT_daily$time <- as.Date(Google_AT_daily$time)
Google_AT_daily <- arrange(Google_AT_daily, time)
Google_AT_daily$Date_q <- as.yearqtr(Google_AT_daily$time)
Google_AT_daily$Date_q <- as.Date(Google_AT_daily$Date_q)
#Google_AT_daily$QDate  <- as.character(Google_AT_daily$QDate)
#Google_AT_daily$QDate[Google_AT_daily$QDate == "2022 Q1"] <- "2021 Q3"
#Google_AT_daily$QDate[Google_AT_daily$QDate == "2021 Q4"] <- "2021 Q3"
Google_AT_qtrly <- Google_AT_daily %>% group_by(Date_q) %>%
summarise_all(mean)
#rownames(Google_AT_qtrly)  <- as.Date(Date_q)
Google_AT_qtrly_63 <- Google_AT_qtrly[1:63,]
Data[(Date_q%in%Google_AT_qtrly_63$Date_q),3] <- (Google_AT_qtrly_63$value)
Data$google_ts <- ts(Data$google, start=c(2006,1), end = c(2021,3), frequency = 4)
# abgerufen final am 11.02.2022
#Source: https://ec.europa.eu/info/business-economy-euro/indicators-statistics/economic-databases/business-and-consumer-surveys/download-business-and-consumer-survey-data/time-series_en#consumers
cci <- read.csv2("https://raw.githubusercontent.com/anneval/MA_data/main/RData/CCI.csv")[253:444,c(1,297)]
colnames(cci)[colnames(cci) %in% c("X", "CONS.AT.TOT.COF.BS.M")] <- c("time", "value")
cci <- cbind(cci,Date_m)
cci <- arrange(cci, Date_m)
cci$Date_q <- as.yearqtr(cci$Date_m)
cci$Date_q <- as.Date(cci$Date_q)
#cci$Date_q  <- as.character(cci$Date_m)
#cci$Date_q[CCI_mntly$Date_q == "2021 Q4"] <- "2021 Q3"
cci_qtrly <- cci %>% group_by(Date_q) %>%
summarise_all(mean)
cci_qtrly_63 <- cci_qtrly[1:63,]
Data[(Date_q%in%cci_qtrly_63$Date_q),2] <- (cci_qtrly_63$value)
Data$cci_ts <- ts(Data$cci, start=c(2006,1), end = c(2021,3), frequency = 4)
### Change from daily to weekly frequency
google_w <- ts_frequency(Google_AT_daily, to = "week") %>% ts_xts()
View(google_w)
View(Google_AT_daily)
### Change from daily to weekly frequency
Google_AT_daily <- Google_AT_daily[,1:2]
View(Google_AT_daily)
### Change from daily to weekly frequency
google <- Google_AT_daily[,1:2]
google_w <- ts_frequency(google, to = "week") %>% ts_xts()
View(google_w)
### weekly 2020
google_w <- google_w[time(google_w) >= "2020-01-01"]
wwwi <- wwwi[time(wwwi) >= "2020-01-01"]
View(wwwi)
wecon_oenb <- wecon_oenb %>% xts:::.drop.time()
View(wecon_oenb)
wwwi <- wwwi %>% ts_data.frame()
wwwi$time <- wwwi$time %m-% days(3)
wwwi <- wwwi %>% ts_xts()
oecd_w <- oecd_w %>% ts_data.frame()
oecd_w$time <- oecd_w$time %m-% days(2)
oecd_w <- oecd_w %>% ts_xts()
google_w <- pes_w %>% ts_data.frame()
google_w$time <- pes_w$time %m-% days(2)
google_w <- google_w %>% ts_data.frame()
google_w$time <- google_w$time %m-% days(2)
google_w <- google_w %>% ts_xts()
oecd <- oecd %>% ts_data.frame()
oecd$time <- oecd$time %m-% days(2)
oecd <- oecd %>% ts_xts()
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100,
# `OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3) %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
#  dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-01-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100
# `OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3) %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
#  dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-01-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100
# `OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=2) %>%
dySeries("WIFO WWWI", strokeWidth = 2) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 2) %>%
#  dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-01-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
View(wecon_oenb)
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100
`OENB Weekly Indicator` = wecon_oenb
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100
`OENB Weekly Indicator` = wecon_oenb
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100,
`OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=2) %>%
dySeries("WIFO WWWI", strokeWidth = 2) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 2) %>%
dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-01-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100,
`OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=2) %>%
dySeries("WIFO WWWI", strokeWidth = 2) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 2) %>%
dySeries("OENB Weekly Indicator", strokeWidth = 2) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-01-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100,
`OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3) %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-01-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100,
`OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3) %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-03-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
View(wecon_oenb)
### weekly 2020
google_w <- google_w[time(google_w) >= "2020-03-01"]
### Change from daily to weekly frequency
google <- Google_AT_daily[,1:2]
google_w <- ts_frequency(google, to = "week") %>% ts_xts()
#### OECD weekly tracker
temp <- tempfile()
download.file("https://github.com/NicolasWoloszko/OECD-Weekly-Tracker/raw/main/Data/weekly_tracker.xlsx",
destfile = temp)
download.file("https://github.com/NicolasWoloszko/OECD-Weekly-Tracker/raw/main/Data/weekly_tracker.xlsx",
destfile = temp)
oecd <- read_xlsx(temp, sheet = "Sheet1") %>%
#oecd <- read_xlsx("./real_data/weekly_tracker.xlsx", sheet = "Sheet1") %>%
filter(region == "Austria") %>%
#filter(region %in% c("Austria", "Germany", "Switzerland")) %>%
mutate(date = as.Date(date),
Tracker = `Tracker (yoy)` / 100) %>%
filter(date >= "2020-01-01") %>%
rename(time = date, value = Tracker) %>%
dplyr::select(time, value) %>%
ts_xts()
temp <- tempfile()
download.file("https://www.oenb.at/dam/jcr:7c5ab44b-204d-4d45-a802-884d1019f7f5/data_on_the_weekly_GDP-indicator.csv",
destfile = temp)
#### first weeks fehlt
wecon_oenb <- read_delim(temp, delim = ";", escape_double = FALSE, trim_ws = TRUE) %>%
drop_na(Calenderweek) %>%
rename(time = Calenderweek, value = `Real GDP compared to pre-crisis levels`) %>%
dplyr::select(time, value)
wecon_oenb <- ts(wecon_oenb, start = c(2020,10), frequency = 52) %>% ts_xts()
### WIFO Weekly Tracker
temp <- tempfile()
download.file("https://www.wifo.ac.at/wwadocs/konjunktur/W%C3%B6chentlicherWIFOWirtschaftsindex/WIFO-Konjunkturberichterstattung_W%C3%B6chentlicherWIFOWirtschaftsindex.xlsx",
destfile = temp)
t0 <- as.numeric(as.Date("2007-01-01"))
t1 <- as.numeric(as.Date(Sys.Date()))
t <- round((t1 - t0) / 7) - 3 # weeks passed since index started
wwwi <- read_xlsx(temp, sheet = "WWWI",
#wwwi <- read_xlsx(path = "./real_data/wwwi_wifo.xlsx", sheet = "WWWI",
skip = 2, col_names = c("DATE", "VALUE", "cng_yavg", "cng_q"),
#col_types = c("date", "guess", "guess", "guess"),
n_max = t) %>%
mutate(DATE = as.character(DATE)) %>%
dplyr::select(DATE, VALUE) %>%
rename(time = DATE, value = VALUE) %>%
ts_xts()
### weekly 2020
google_w <- google_w[time(google_w) >= "2020-03-01"]
wwwi <- wwwi[time(wwwi) >= "2020-03-01"]
wecon_oenb <- wecon_oenb %>% xts:::.drop.time()
wecon_oenb <- wecon_oenb[time(wecon_oenb) >= "2020-03-01"]
oecd <- oecd[time(oecd) >= "2020-03-01"]
wwwi <- wwwi %>% ts_data.frame()
wwwi$time <- wwwi$time %m-% days(3)
wwwi <- wwwi %>% ts_xts()
wwwi <- wwwi[time(wwwi) >= "2020-03-01"]
wwwi <- wwwi %>% ts_data.frame()
View(wwwi)
wwwi <- wwwi[time(wwwi) >= "2020-03-01"]
wwwi <- wwwi %>% ts_xts()
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100,
`OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3) %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-01-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100,
`OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3) %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-03-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
?dySeries
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100,
`OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3,strokePattern=dashed) %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-03-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100,
`OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3,strokePattern="dashed") %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-03-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100,
`OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3) %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-02-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100
# `OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3) %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
# dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-02-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100
# `OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3) %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
# dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-01-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
ts_dygraphs(ts_c(
`Perceived Economic Situation` = pes_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd_w * 100,
# `OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3) %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
#  dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-01-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd_w * 100,
# `OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3) %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
#  dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-01-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100,
# `OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3) %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
#  dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-01-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100
# `OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3) %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
#  dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-01-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
google_w <- google_w %>% ts_xts()
wwwi <- wwwi %>% ts_xts()
ts_dygraphs(ts_c(
`Perceived Economic Situation` = google_w * 5,
`WIFO WWWI` = wwwi,
`OECD Weekly Tracker` = oecd * 100
# `OENB Weekly Indicator` = wecon_oenb
))  %>%
dySeries("Perceived Economic Situation", strokeWidth=3) %>%
dySeries("WIFO WWWI", strokeWidth = 3) %>%
dySeries("OECD Weekly Tracker", strokeWidth = 3) %>%
# dySeries("OENB Weekly Indicator", strokeWidth = 3) %>%
dyAxis("x", drawGrid = FALSE) %>%
dyRangeSelector(dateWindow = c(as.Date("2020-01-01"), Sys.Date()))%>%
dyOptions(useDataTimezone = TRUE)
library(readr)
library(readxl)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(tseries)
library(forecast)
library(vars)
library(GGally)
library(Metrics)
library(caret)
library(collapse)
library(urca)
library(macror) # for latex table adf
library(xtable) # latex table
t_0 <- as.Date("2006-01-01") #Setting start date for the series
t_1 <- as.Date("2021-07-01") #Setting end date for the series
t_2 <- as.Date("2021-12-31")
Date_q <- seq.Date(t_0,t_1,by="quarter")
Date_m <- seq.Date(t_0,t_2,by="month")
bigT <- length(Date_q)
M <- 6
Data   <- matrix(NA,bigT,M)
colnames(Data)  <- c("gdp", "cci", "google","gdp_ts", "cci_ts", "google_ts")
Data <- as.data.frame(Data)
rownames(Data)  <- as.Date(Date_q)
# abgerufen final am 11.02.2022
#Source: https://data.oecd.org/gdp/quarterly-gdp.htm#indicator-chart
gdp <- read.csv("https://raw.githubusercontent.com/anneval/MA_data/main/RData/GDP_oecd.csv")[9:71,6:7]
colnames(gdp)[colnames(gdp) %in% c("TIME", "Value")] <- c("QDate", "value")
gdp <- cbind(gdp,Date_q)
#ts:
gdp_ts <- ts(gdp$value, start=c(2006,1), end = c(2021,3), frequency = 4)
Data[(Date_q%in%gdp$Date_q),1] <- gdp$value
Data$gdp_ts <- ts(Data$gdp, start=c(2006,1), end = c(2021,3), frequency = 4)
# abgerufen final am 11.02.2022
#Source: https://ec.europa.eu/info/business-economy-euro/indicators-statistics/economic-databases/business-and-consumer-surveys/download-business-and-consumer-survey-data/time-series_en#consumers
cci <- read.csv2("https://raw.githubusercontent.com/anneval/MA_data/main/RData/CCI.csv")[253:444,c(1,297)]
colnames(cci)[colnames(cci) %in% c("X", "CONS.AT.TOT.COF.BS.M")] <- c("time", "value")
cci <- cbind(cci,Date_m)
cci <- arrange(cci, Date_m)
cci$Date_q <- as.yearqtr(cci$Date_m)
cci$Date_q <- as.Date(cci$Date_q)
#cci$Date_q  <- as.character(cci$Date_m)
#cci$Date_q[CCI_mntly$Date_q == "2021 Q4"] <- "2021 Q3"
cci_qtrly <- cci %>% group_by(Date_q) %>%
summarise_all(mean)
cci_qtrly_63 <- cci_qtrly[1:63,]
Data[(Date_q%in%cci_qtrly_63$Date_q),2] <- (cci_qtrly_63$value)
Data$cci_ts <- ts(Data$cci, start=c(2006,1), end = c(2021,3), frequency = 4)
