error_OLS5 <-error_OLS5[!is.na(error_OLS5)]
MAE_OLS_OOS5 <- mean(abs(error_OLS5))
MAE_OLS_OOS5
RMSE_OLS_OOS5  <- sqrt(mean(error_OLS5^2))
RMSE_OLS_OOS5
MSE_OLS5 <- mean(error_OLS5^2)
MSE_OLS5
# IS error terms----------------------------------------------------------------
# IS: If you are forecasting for an observation that was part of the data sample - it is in-sample forecast.
resid_OLS5 <- expanding_OLS5[[3]]
final_resid_OLS5 <- resid_OLS5[[length(resid_OLS5)]]
RMSE_OLS_IS5    <- sqrt(mean(final_resid_OLS5^2))
RMSE_OLS_IS5
# Autocorrelation residuals:
checkresiduals(final_resid_OLS5)
plotexp_5 <- ts.plot(ts(Data[20:63,1],frequency = 4, start = c(2010,4)),
ts(pred4,frequency = 4, start = c(2010,4)),
ts(pred5,frequency = 4, start = c(2010,4)),
col = c("black", "red","blue"),
xlab = "Year",
ylab = "GDP growth (%)",
lwd = 1)
legend("bottomleft", c("GDP growth","CCI & AR(1)" ,"PES & AR(1)"), col=c("black","red","blue"), lty=c(1), xpd=TRUE, bty="b",cex=0.75
)
model = gdp ~ gdp_lag + cci + google
expanding_OLS6 <- expanding_window_OLS(Data[2:63,], dep_var, start = 19)
#predictions
pred6 <- do.call(rbind.data.frame, expanding_OLS6[[2]]) # NAS wegen lag!
colnames(pred6) <- c("value")
Date_q_pred <- Date_q[20:63]
pred6 <- as.ts(pred6, start=c(2010,4), end = c(2021,3), frequency = 4)
# Out of Sample error terms----------------------------------------------------------------
error_OLS6 <- expanding_OLS6[[4]]
error_OLS6 <-error_OLS6[!is.na(error_OLS6)]
MAE_OLS_OOS6 <- mean(abs(error_OLS6))
MAE_OLS_OOS6
RMSE_OLS_OOS6  <- sqrt(mean(error_OLS6^2))
RMSE_OLS_OOS6
MSE_OLS6 <- mean(error_OLS6^2)
MSE_OLS6
# IS error terms----------------------------------------------------------------
# IS: If you are forecasting for an observation that was part of the data sample - it is in-sample forecast.
resid_OLS6 <- expanding_OLS6[[3]]
final_resid_OLS6 <- resid_OLS6[[length(resid_OLS6)]]
RMSE_OLS_IS6    <- sqrt(mean(final_resid_OLS6^2))
RMSE_OLS_IS6
# Autocorrelation residuals:
checkresiduals(final_resid_OLS6)
model = gdp ~ cci + google
expanding_OLS7 <- expanding_window_OLS(Data, dep_var, start = 19)
#predictions
pred7 <- do.call(rbind.data.frame, expanding_OLS7[[2]]) # NAS wegen lag!
colnames(pred7) <- c("value")
Date_q_pred <- Date_q[19:63]
pred7 <- as.ts(pred7, start=c(2010,3), end = c(2021,3), frequency = 4)
# Out of Sample error terms----------------------------------------------------------------
error_OLS7 <- expanding_OLS7[[4]]
error_OLS7 <-error_OLS7[!is.na(error_OLS7)]
MAE_OLS_OOS7 <- mean(abs(error_OLS7))
MAE_OLS_OOS7
RMSE_OLS_OOS7  <- sqrt(mean(error_OLS7^2))
RMSE_OLS_OOS7
MSE_OLS7 <- mean(error_OLS7^2)
MSE_OLS7
# IS error terms----------------------------------------------------------------
# IS: If you are forecasting for an observation that was part of the data sample - it is in-sample forecast.
resid_OLS7 <- expanding_OLS7[[3]]
final_resid_OLS7 <- resid_OLS7[[length(resid_OLS7)]]
RMSE_OLS_IS7    <- sqrt(mean(final_resid_OLS7^2))
RMSE_OLS_IS7
# Autocorrelation residuals:
checkresiduals(final_resid_OLS7)
acf(final_resid_OLS3, type="correlation")
acf(final_resid_OLS3, type="correlation")
lmtest::dwtest(expanding_OLS3[1])
View(expanding_OLS1)
lmtest::dwtest(expanding_OLS3[1][44])
model <- expanding_OLS3[1][44]
lmtest::dwtest(model)
View(expanding_OLS1)
model <- lm(gdp ~ google,data=Data)
lmtest::dwtest(model)
library(ggpubr)
plot(model)
#acf(final_resid_OLS3)
bptest(model)
# Autocorrelation residuals:
checkresiduals(final_resid_OLS3)
model <-  expanding_OLS3[[1]]
View(model)
model <-  expanding_OLS3[[1]][44]
View(model)
bptest(model)
bptest(model[1])
View(model)
bptest(model[[1]])
model <-  expanding_OLS1[[1]][44]
bptest(model[[1]])
model <-  expanding_OLS5[[1]][44]
bptest(model[[1]])
# Autocorrelation residuals:
checkresiduals(final_resid_OLS3)
plot(model)
View(resid_OLS1)
mod1 <- lm(gdp ~ lag(gdp), data = Data_train)
summary(mod1)
#sqrt(mean(mod1$residuals^2)) # IS
acc_is1 <-forecast::accuracy(mod1)
pred_mod1 <- predict(mod1, Data_test)
pred_mod1
acc_oos1 <-forecast::accuracy(Data_test$gdp,pred_mod1)
acc_oos1
forecast_mod1 <- predict(mod1, n.ahead = 3)
#plot(forecast_mod1)
#Data_cci <- cci_qtrly[,c(1,3)]
#colnames(Data_cci) <- c("time", "cci") kann forecasten mit dereinen observation mehr aber kann nicht evaluaten... no equivalent gdp value
mod2 <- lm(gdp ~ cci, data = Data_train)
summary(mod2)
sqrt(mean(mod2$residuals^2)) # IS
acc_is2 <-forecast::accuracy(mod2)
#pred_mod2
pred_mod2 <- predict(mod2,Data_test)
#ts.plot(pred_mod2)
#fore <- predict(mod2,newdata = Data_cci) # predict cci ...
acc_oos2 <-forecast::accuracy(Data_test$gdp,pred_mod2)
acc_oos2
#pred_test <- predict(mod2, cci_test)
#mod2$coefficients
# do new data set where google all periods
#colnames(Google_AT_qtrly) <- c("Date_q","time","google")
Data_google <- Google_AT_qtrly[,c(1,3)]
colnames(Data_google) <- c("time", "google")
mod3<- lm(gdp ~ google, data = Data_train)
summary(mod3)
sqrt(mean(mod3$residuals^2)) # IS
acc_is3 <- forecast::accuracy(mod3) # IS accuracy
pred_mod3 <- predict(mod3, Data_test)
#pred_mod3 <- predict(mod3, Google_AT_qtrly[45:65,])
pred_mod3
acc_oos3 <-forecast::accuracy(Data_test$gdp,pred_mod3)
acc_oos3
#fore <- predict(newdata = Data_google,mod3)
#ts.plot(fore)
##ts.plot(Google_AT_qtrly$value)
mod4<- lm(gdp ~ lag(gdp) + cci, data = Data_train)
summary(mod4)
sqrt(mean(mod4$residuals^2)) # IS
acc_is4 <-forecast::accuracy(mod4) # IS accuracy
pred_mod4 <- predict(mod4, Data_test)
pred_mod4
acc_oos4 <-forecast::accuracy(Data_test$gdp,pred_mod4)
acc_oos4
mod5<- lm(gdp ~ lag(gdp) + google, data = Data_train)
summary(mod5)
sqrt(mean(mod5$residuals^2)) # IS
acc_is5 <- forecast::accuracy(mod5) # IS accuracy
pred_mod5 <- predict(mod5, Data_test)
acc_oos5 <-forecast::accuracy(Data_test$gdp,pred_mod5)
acc_oos5
# test stimmt!
#error <- Data_test$gdp - pred_mod5
#error <-error[!is.na(error)]
#RMSE <- sqrt(mean(error^2))
#RMSE
mod6<- lm(gdp ~ lag(gdp) + cci + google, data = Data_train)
summary(mod6)
sqrt(mean(mod6$residuals^2)) # IS
acc_is6 <- forecast::accuracy(mod6) # IS
##OOS
pred_mod6 <- predict(mod6, Data_test)
acc_oos6 <-forecast::accuracy(Data_test$gdp,pred_mod6)
acc_oos6
#predictnew <- predict(mod6,)
mod7<- lm(gdp ~ cci + google, data = Data_train)
summary(mod7)
sqrt(mean(mod7$residuals^2)) # IS
acc_is7 <- forecast::accuracy(mod7) # IS
##OOS
pred_mod7 <- predict(mod7, Data_test)
acc_oos7 <-forecast::accuracy(Data_test$gdp,pred_mod7)
acc_oos7
#predictnew <- predict(mod6,)
stargazer::stargazer(mod1,mod2,mod3,mod4,mod5,mod6, mod7)
comparison_OLS_IS <- rbind("OLS_IS" = acc_is1,acc_is2,acc_is3,acc_is4,acc_is5,acc_is6,acc_is7)
comparison_OLS_OOS <- rbind("OLS_OOS" = acc_oos1,acc_oos2,acc_oos3,acc_oos4,acc_oos5,acc_oos6,acc_oos7)
stargazer::stargazer(comparison_OLS_IS, summary = FALSE,colnames = TRUE)
stargazer::stargazer(comparison_OLS_OOS, summary = FALSE,colnames = TRUE)
stargazer::stargazer(mod1,mod2,mod3,mod4,mod5,mod6, mod7)
comparison_OLS_IS <- rbind("OLS_IS" = acc_is1,acc_is2,acc_is3,acc_is4,acc_is5,acc_is6,acc_is7)
comparison_OLS_OOS <- rbind("OLS_OOS" = acc_oos1,acc_oos2,acc_oos3,acc_oos4,acc_oos5,acc_oos6,acc_oos7)
stargazer::stargazer(comparison_OLS_IS, summary = FALSE,colnames = TRUE)
stargazer::stargazer(comparison_OLS_OOS, summary = FALSE,colnames = TRUE)
ctrl <- trainControl(method = "LOOCV")
# lag problem again... easiest prob do to new data frame and add it as a variables
model1_CV <- train(gdp ~ gdp_lag, data = Data[2:63,], method = "lm", trControl = ctrl)
# lag problem again... easiest prob do to new data frame and add it as a variables
model1_CV <- train(gdp ~ gdp_lag, data = Data[2:63,], method = "lm", trControl = ctrl)
print(model1_CV)
stargazer::stargazer(model1_CV)
model2_CV <- train(gdp ~ cci, data = Data, method = "lm", trControl = ctrl)
model2_CV <- train(gdp ~ cci, data = Data, method = "lm", trControl = ctrl)
print(model2_CV)
model3_CV <- train(gdp ~ google, data = Data, method = "lm", trControl = ctrl)
model3_CV <- train(gdp ~ google, data = Data, method = "lm", trControl = ctrl)
print(model3_CV)
model4_CV <- train(gdp ~ gdp_lag + cci, data = Data[2:63,], method = "lm", trControl = ctrl)
print(model4_CV)
print(model4_CV)
model5_CV <- train(gdp ~ gdp_lag + google, data = Data[2:63,], method = "lm", trControl = ctrl)
print(model5_CV)
model6_CV <- train(gdp ~ gdp_lag + google + cci, data = Data[2:63,], method = "lm", trControl = ctrl)
print(model6_CV)
model7_CV <- train(gdp ~ google + cci, data = Data, method = "lm", trControl = ctrl)
model7_CV <- train(gdp ~ google + cci, data = Data, method = "lm", trControl = ctrl)
print(model7_CV)
model7_CV$results
model1_CV$results
model2_CV$results
model2_CV$results
model3_CV$results
model4_CV$results
model5_CV$results
model6_CV$results
model7_CV$results
View(model1_CV)
model7_CV$finalModel
model7_CV$results
results <- as.data.frame(model7_CV$results)
View(results)
model7_CV
model7_CV$results
results <- as.data.frame(model7_CV$results,model6_CV$results,model5_CV$results,model4_CV$results,model3_CV$results,model2_CV$results,model1_CV$results)
results <- rbind("OLS_IS" = model7_CV$results,model6_CV$results,model5_CV$results,model4_CV$results,model3_CV$results,model2_CV$results,model1_CV$results)
results <- rbind("LOOCV" = model7_CV$results,model6_CV$results,model5_CV$results,model4_CV$results,model3_CV$results,model2_CV$results,model1_CV$results)
View(results)
LOOCV_table <- cbind(model7_CV$results,model6_CV$results,model5_CV$results,model4_CV$results,model3_CV$results,model2_CV$results,model1_CV$results)
View(LOOCV_table)
LOOCV_table <- rbind(model7_CV$results,model6_CV$results,model5_CV$results,model4_CV$results,model3_CV$results,model2_CV$results,model1_CV$results)
View(LOOCV_table)
print(xtable::xtable(LOOCV_table,caption="LOOCV results",label="LOOCVresults"),
sanitize.text.function=function(UR.table){UR.table},comment=FALSE)
install.packages("midasr")
install.packages("midasr")
library(midasr)
data("USqgdp", package = "midasr")
data("USpayems", package = "midasr")
y <- window(USqgdp, end = c(2011, 2))
x <- window(USpayems, end = c(2011, 7))
yg <- diff(log(y)) * 100
xg <- diff(log(x)) * 100
nx <- ts(c(NA, xg, NA, NA), start = start(x), frequency = 12)
ny <- ts(c(rep(NA, 33), yg, NA), start = start(x), frequency = 4)
xx <- window(nx, start = c(1985, 1), end = c(2009, 3))
yy <- window(ny, start = c(1985, 1), end = c(2009, 1))
beta0 <- midas_r(yy ~ mls(yy, 1, 1) + mls(xx, 3:11, 3, nbeta),
+    start = list(xx = c(1.7, 1, 5)))
beta0 <- midas_r(yy ~ mls(yy, 1, 1) + mls(xx, 3:11, 3, nbeta),start = list(xx = c(1.7, 1, 5)))
coef(beta0)
betan <- midas_r(yy ~ mls(yy, 1, 1) + mls(xx, 3:11, 3, nbetaMT), start = list(xx = c(2, 1, 5, 0)))
coef(betan)
um <- midas_r(yy ~ mls(yy, 1, 1) + mls(xx, 3:11, 3), start = NULL)
coef(um)
fulldata <- list(xx = window(nx, start = c(1985, 1), end = c(2011, 6)),yy = window(ny, start = c(1985, 1), end = c(2011, 2)))
View(fulldata)
insample <- 1:length(yy)
outsample <- (1:length(fulldata$yy))[-insample]
insample <- 1:length(yy)
avgf <- average_forecast(list(beta0, betan, um), data = fulldata, insample = insample, outsample = outsample)
sqrt(avgf$accuracy$individual$MSE.out.of.sample)
?mls
### use this for model 1,2,4, monthly and quarteroy daata and AR
BUT expanding how???
um <- midas_r(yy ~ mls(yy, 1, 1) + mls(xx, 1:2, 3), start = NULL)
coef(um)
um <- midas_r(yy ~ mls(yy, 1, 1) + mls(xx, 1, 3), start = NULL)
coef(um)
?fmls
mls?
?
?ml
?mls
?nealmon
?nbeta
?mls
### use this for model 1,2,4, monthly and quarteroy daata and AR
BUT expanding how???
um <- midas_r(yy ~ mls(yy, 0, 1) + mls(xx, 3:11, 3), start = NULL)
coef(um)
um <- midas_r(yy ~ mls(yy, 0, 1) + mls(xx, 3, 3), start = NULL)
coef(um)
um <- midas_r(yy ~ mls(yy, 0, 1) + mls(xx, 1, 3), start = NULL)
fulldata <- list(xx = window(nx, start = c(1985, 1), end = c(2011, 6)),yy = window(ny, start = c(1985, 1), end = c(2011, 2)))
fulldata <- list(xx = window(nx, start = c(1985, 1), end = c(2011, 6)),yy = window(ny, start = c(1985, 1), end = c(2011, 2)))
coef(um)
um <- midas_r(yy ~ mls(yy, 0, 1) + mls(xx, 2, 3), start = NULL)
coef(um)
um <- midas_r(yy ~ mls(yy, 1, 1) + mls(xx, 2, 3), start = NULL)
coef(um)
um <- midas_r(yy ~ mls(yy, 1, 1) + xx+mls(xx, 2, 3), start = NULL)
um <- midas_r(yy ~ mls(yy, 1, 1) +mls(xx, 0:1, 3), start = NULL)
coef(um)
um <- midas_r(yy ~ mls(yy,0, 1) +mls(xx, 0:1, 3), start = NULL)
coef(um)
um <- midas_r(yy ~ mls(yy,1, 1) +mls(xx, 0:1, 3), start = NULL)
coef(um)
View(gdp)
View(gdp)
y <- window(gdp, end = c(2021, 3))
y <- window(gdp$value, end = c(2021, 3))
y <- window(as.ts(gdp$value), end = c(2021, 3))
y <- window(gdp_ts, end = c(2021, 3))
View(cci)
View(cci)
cci_ts <- as.ts(cci$value)
x <- window(cci_ts, end = c(2021, 12))
cci_ts <- as.ts(cci$value,start=c(2006,1),end = c(2021, 12))
cci_ts <- ts(cci$value, start=c(2006,1), end = c(2021,12), frequency = 12)
x <- window(cci_ts, end = c(2021, 12))
nx <- ts(c(NA, x, NA, NA), start = start(x), frequency = 12)
ny <- ts(c(rep(NA, 33), y, NA), start = start(x), frequency = 4)
um <- midas_r(ny ~ mls(ny,1, 1) +mls(nx, 0:1, 3), start = NULL)
y <- window(gdp_ts, end = c(2021, 3))
x <- window(cci_ts, end = c(2021, 9))
nx <- ts(c(NA, x, NA, NA), start = start(x), frequency = 12)
ny <- ts(c(rep(NA, 33), y, NA), start = start(x), frequency = 4)
um <- midas_r(ny ~ mls(ny,1, 1) +mls(nx, 0:1, 3), start = NULL)
ny <- ts(c(rep(NA, 66), y, NA), start = start(x), frequency = 4)
ny <- ts(c(rep(NA, 99), y, NA), start = start(x), frequency = 4)
y <- window(gdp_ts, end = c(2021, 4))
x <- window(cci_ts, end = c(2021, 12))
y <- window(gdp_ts, end = c(2021, 3))
x <- window(cci_ts, end = c(2021, 12))
data("USqgdp", package = "midasr")
data("USpayems", package = "midasr")
y <- window(USqgdp, end = c(2011, 2))
x <- window(USpayems, end = c(2011, 7))
yg <- diff(log(y)) * 100
nx <- ts(c(NA, xg, NA, NA), start = start(x), frequency = 12)
ny <- ts(c(rep(NA, 33), yg, NA), start = start(x), frequency = 4)
y <- window(gdp_ts, end = c(2021, 3))
x <- window(cci_ts, end = c(2021, 12))
nx <- ts(c(NA, x, NA, NA), start = start(x), frequency = 12)
ny <- ts(c(rep(NA, 1), y, NA), start = start(x), frequency = 4)
ny <- ts(c(rep(NA, 15), y, NA), start = start(x), frequency = 4)
ny <- ts(c(rep(NA, 10), y, NA), start = start(x), frequency = 4)
ny <- ts(c(rep(NA, 9), y, NA), start = start(x), frequency = 4)
?rep
ny <- ts(c(rep(NA, 3), y, NA), start = start(x), frequency = 4)
ny <- ts(c(rep(NA, 3), NA, y), start = start(x), frequency = 4)
nx <- ts(c(NA, NA, NA, x), start = start(x), frequency = 12)
y <- window(gdp_ts, end = c(2021, 2))
x <- window(cci_ts, end = c(2021, 7))
nx <- ts(c(NA, x, NA, NA), start = start(x), frequency = 12)
ny <- ts(c(rep(NA, 33), y, NA), start = start(x), frequency = 4)
y <- window(gdp_ts, end = c(2021, 2))
x <- window(cci_ts, end = c(2021, 7))
yg <- diff(log(y)) * 100
xg <- diff(log(x)) * 100
nx <- ts(c(NA, xg, NA, NA), start = start(x), frequency = 12)
ny <- ts(c(rep(NA, 33), yg, NA), start = start(x), frequency = 4)
ny
data("USqgdp", package = "midasr")
data("USpayems", package = "midasr")
x <- window(USpayems, end = c(2011, 7))
yg <- diff(log(y)) * 100
xg <- diff(log(x)) * 100
nx <- ts(c(NA, xg, NA, NA), start = start(x), frequency = 12)
ny <- ts(c(rep(NA, 33), yg, NA), start = start(x), frequency = 4)
nx
ny
y
data("USqgdp", package = "midasr")
data("USpayems", package = "midasr")
y <- window(USqgdp, end = c(2011, 2))
x <- window(USpayems, end = c(2011, 7))
yg <- diff(log(y)) * 100
xg <- diff(log(x)) * 100
nx <- ts(c(NA, xg, NA, NA), start = start(x), frequency = 12)
ny <- ts(c(rep(NA, 33), yg, NA), start = start(x), frequency = 4)
y
yg
ny
x
nx
x
ts.plot(ts(oecd*100,frequency = 52, start = c(2020,1)),
ts(wwwi,frequency = 52, start = c(2020,1)),
ts(google_w*5,frequency = 52, start = c(2020,1)),
ts(wecon_oenb_test,frequency = 52, start = c(2020,10)),
col = c("darkgreen", "red","black","steelblue"),
xlab = "Time",
main = "Comparison Weekly Indicators",
lwd = 1
)
um <- midas_r(yy ~ mls(yy,1, 1) +mls(xx, 0:1, 3), start = NULL)
coef(um)
?mls
um <- midas_r(yy ~ mls(yy,1, 1) +mls(xx, 0:1, 2), start = NULL)
um <- midas_r(yy ~ mls(yy,1, 1) +mls(xx, 0:1, 4), start = NULL)
um <- midas_r(yy ~ mls(yy,1, 1) +mls(xx, 0:1, 3), start = NULL)
coef(um)
um <- midas_r(yy ~ mls(yy,1, 3) +mls(xx, 0:1, 3), start = NULL)
um <- midas_r(yy ~ mls(yy,1, 1) +mls(xx, 0:1, 3), start = NULL)
?average_forecast
data("USqgdp", package = "midasr")
data("USpayems", package = "midasr")
x <- window(USpayems, end = c(2011, 7))
yg <- diff(log(y)) * 100
xg <- diff(log(x)) * 100
nx <- ts(c(NA, xg, NA, NA), start = start(x), frequency = 12)
ny <- ts(c(rep(NA, 33), yg, NA), start = start(x), frequency = 4)
xx <- window(nx, start = c(1985, 1), end = c(2009, 3))
yy <- window(ny, start = c(1985, 1), end = c(2009, 1))
beta0 <- midas_r(yy ~ mls(yy, 1, 1) + mls(xx, 3:11, 3, nbeta),start = list(xx = c(1.7, 1, 5)))
coef(beta0)
betan <- midas_r(yy ~ mls(yy, 1, 1) + mls(xx, 3:11, 3, nbetaMT), start = list(xx = c(2, 1, 5, 0)))
um <- midas_r(yy ~ mls(yy,1, 1) + mls(xx, 0:1, 3), start = NULL)
coef(um)
fulldata <- list(xx = window(nx, start = c(1985, 1), end = c(2011, 7)),yy = window(ny, start = c(1985, 1), end = c(2011, 2)))
insample <- 1:length(yy)
outsample <- (1:length(fulldata$yy))[-insample]
avgf <- average_forecast(list(beta0, betan, um), data = fulldata, insample = insample, outsample = outsample, type = "recursive")
View(avgf)
sqrt(avgf$accuracy$individual$MSE.out.of.sample)
avgf <- average_forecast( um, data = fulldata, insample = insample, outsample = outsample, type = "recursive")
sqrt(avgf$accuracy$individual$MSE.out.of.sample)
avgf <- average_forecast( um, data = fulldata, insample = insample, outsample = outsample, type = "recursive")
avgf <- average_forecast(um, data = fulldata, insample = insample, outsample = outsample, type = "recursive")
avgf <- average_forecast(list(beta0, betan, um), data = fulldata, insample = insample, outsample = outsample, type = "recursive")
avgf <- average_forecast(list(um), data = fulldata, insample = insample, outsample = outsample, type = "recursive")
sqrt(avgf$accuracy$individual$MSE.out.of.sample)
avgf <- average_forecast(list(um), data = fulldata, insample = insample, outsample = outsample, type = "rolling")
sqrt(avgf$accuracy$individual$MSE.out.of.sample)
avgf <- average_forecast(list(um), data = fulldata, insample = insample, outsample = outsample, type = "fixed")
sqrt(avgf$accuracy$individual$MSE.out.of.sample)
avgf <- average_forecast(list(um), data = fulldata, insample = insample, outsample = outsample, type = "recursive")
View(avgf)
sqrt(avgf$accuracy$individual$MSE.out.of.sample)
View(avgf)
sqrt(avgf$accuracy$individual$MSE.out.of.sample)
y <- window(USqgdp, end = c(2011, 2))
x <- window(USpayems, end = c(2011, 7))
yg <- diff(log(y)) * 100
xg <- diff(log(x)) * 100
cci_ts <- ts(cci$value, start=c(2006,1), end = c(2021,12), frequency = 12)
y <- window(gdp_ts, end = c(2021, 2))
x <- window(cci_ts, end = c(2021, 7))
nx <- ts(c(NA, xg, NA, NA), start = start(x), frequency = 12)
ny <- ts(c(rep(NA, 33), yg, NA), start = start(x), frequency = 4)
y <- window(USqgdp, end = c(2011, 2))
x <- window(USpayems, end = c(2011, 7))
yg <- diff(log(y)) * 100
xg <- diff(log(x)) * 100
nx <- ts(c(NA, xg, NA, NA), start = start(x), frequency = 12)
ny <- ts(c(rep(NA, 33), yg, NA), start = start(x), frequency = 4)
xx <- window(nx, start = c(1985, 1), end = c(2009, 3))
yy <- window(ny, start = c(1985, 1), end = c(2009, 1))
nx
ny <- ts(c(rep(NA, 33), yg, NA), start = start(x), frequency = 4)
ny
nx
x <- window(USpayems, end = c(2011, 7))
x
y <- window(gdp_ts, end = c(2021, 2))
x <- window(cci_ts, end = c(2021, 7))
nx <- ts(c(NA, xg), start = start(x), frequency = 12)
nx
nx <- ts(xg,start = start(x), frequency = 12)
nx
y <- window(gdp_ts, end = c(2021, 2))
x <- window(cci_ts, end = c(2021, 7))
ny <- ts(c(yg, NA), start = start(x), frequency = 4)
ny <- ts(c(yg,), start = start(x), frequency = 4)
ny <- ts(c(yg), start = start(x), frequency = 4)
ny
y <- window(gdp_ts, end = c(2021, 2))
x <- window(cci_ts, end = c(2021, 7))
um <- midas_r(y ~ mls(y,1, 1) +mls(x, 0:1, 3), start = NULL)
x
y
, NA, NA
nx <- ts(c(NA, xg, NA, NA),start = start(x), frequency = 12)
nx
xx <- window(nx, start = c(1985, 1), end = c(2009, 3))
nx <- ts(c(NA, xg, NA, NA), start = start(x), frequency = 12)
data("USqgdp", package = "midasr")
data("USpayems", package = "midasr")
x <- window(USpayems, end = c(2011, 7))
xg <- diff(log(x)) * 100
nx <- ts(c(NA, xg, NA, NA), start = start(x), frequency = 12)
nx
nx <- ts(c(NA, xg), start = start(x), frequency = 12)
nx <- ts(c(NA, xg), start = start(x), frequency = 12)
nx
nx <- ts(c(xg), start = start(x), frequency = 12)
nx
nx <- ts(c(NA,xg), start = start(x), frequency = 12)
nx
y <- window(USqgdp, end = c(2011, 2)) #Q2 -> also q3 als NA
x <- window(USpayems, end = c(2011, 7))
y
x
cci_ts <- ts(cci$value, start=c(2006,1), end = c(2021,12), frequency = 12)
y <- window(gdp_ts, end = c(2021, 2))
x <- window(cci_ts, end = c(2021, 7))
yg <- diff(log(y)) * 100
xg <- diff(log(x)) * 100
nx <- ts(c(NA, xg, NA, NA),start = start(x), frequency = 12)
ny <- ts(c(NA,yg), start = start(x), frequency = 4)
um <- midas_r(y ~ mls(y,1, 1) +mls(x, 0:1, 3), start = NULL)
coef(um)
um <- midas_r(y ~ mls(y,1, 1) +mls(x, 0:1, 3), start = NULL)
